{
  "hash": "8a81523393975274892f9c304b649491",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Preprocessing paleoclimatic data\"\nauthor: 'Gabriel Munoz'\ndate: today\n---\n\n\n\n\n\n## Paleoclimatic temperature data\n\nWe will load the paleoclimatic reconstruction of `Hagen` for the Neogene\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#load library\nlibrary(raster)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'raster' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: sp\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe legacy packages maptools, rgdal, and rgeos, underpinning the sp package,\nwhich was just loaded, will retire in October 2023.\nPlease refer to R-spatial evolution reports for details, especially\nhttps://r-spatial.org/r/2023/05/15/evolution4.html.\nIt may be desirable to make the sf package available;\npackage maintainers should consider adding sf to Suggests:.\nThe sp package is now running under evolution status 2\n     (status 2 uses the sf package in place of rgdal)\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:raster':\n\n    intersect, select, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(stringr)\nlibrary(purrr)\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'sf' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLinking to GEOS 3.11.2, GDAL 3.7.2, PROJ 9.3.0; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'ggplot2' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'readr' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ tidyr::extract() masks raster::extract()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ dplyr::select()  masks raster::select()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n\n\nRead the raw modelling output from `Hagen et al., 2019` \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#read csv \neast <- read.csv(\"DATA/EAST_60to0Ma_Hagen_etal_2019.csv\")\n```\n:::\n\n\n\n\n### Correct tectonic shift in climatic data\n\nBecause we deal with climatic data that spans over a very large period of time, we have to minimally correct for spatial shifts over time, as the geographic location of the fossil records correspond to the contemporary continent configuration. We use a naive formula that estimates an average shift per Ma in terms of gridcells lengths. For North-America we set up a constant shift rate of 7/21 west and for Europe 2/21 east.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## correct continental shift in temperature records\n\n\neast_corrected <- east %>% \n  dplyr::select(paste0('X', 2:23)) %>% \n  imap(~{\n    \n    e_corr <- .x %>% \n      cbind(\n        east %>% \n          dplyr::select(c('x', 'y'))\n      )%>% \n      setNames(c(.y, 'x', 'y')) %>% \n      mutate(x = case_when(x > -50 ~ x + round((2/21) *  str_remove(.y, 'X') %>% as.numeric()),\n                           x < -50 ~ x - round((7/21) *  str_remove(.y, 'X') %>% as.numeric()))) %>% \n      distinct(x,y, .keep_all = T) %>% \n      filter(complete.cases(.))\n    \n    \n    st_as_sf(e_corr, coords = c('x', 'y'))\n    \n  })\n```\n:::\n\n\n\n\nThe result of this correction is a list of spatial features with the records corrected.\n\nstandardized climate spatial distribution for 2Ma\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\neast_corrected[[1]] %>% \n  ggplot() + \n  geom_sf(aes(col = X2))\n```\n\n::: {.cell-output-display}\n![](01_env_data_inport_files/figure-jats/unnamed-chunk-4-1.png)\n:::\n:::\n\n\n\n\nstandardized climate distribution for 21 Ma\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\neast_corrected[[20]] %>% \n  ggplot() + \n  geom_sf(aes(col = X21))\n```\n\n::: {.cell-output-display}\n![](01_env_data_inport_files/figure-jats/unnamed-chunk-5-1.png)\n:::\n:::\n\n\n\n\nSeem comparable now! With raster stacks, we can now aggregate and extract regional climatic data across time periods for the Neogene and save it as a raster list\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nraster_corrected <- east_corrected %>% \n  imap(~{ rasterFromXYZ(data.frame(st_coordinates(.x), \n                                   'Temp' = .x %>% pull(.y)))})\n\nraster_temp <- east %>% \n  dplyr::select(paste0('X', 2:23)) %>% \n  imap(~{\n    \n    e_corr <- .x %>% \n      cbind(\n        east %>% \n          dplyr::select(c('x', 'y'))\n      )%>% \n      setNames(c(.y, 'x', 'y')) %>% \n      distinct(x,y, .keep_all = T) %>% \n      filter(complete.cases(.))\n    \n    \n    st_as_sf(e_corr, coords = c('x', 'y'))\n    \n  }) |> \n  imap(~{ rasterFromXYZ(data.frame(st_coordinates(.x), \n                                   'Temp' = .x %>% pull(.y)))})\n\nsaveRDS(raster_corrected, 'Data/temperature_grid/raster_corrected.rds')\nsaveRDS(raster_temp, 'Data/temperature_grid/raster_temp.rds')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nraster_corrected <- readRDS('Data/temperature_grid/raster_corrected.rds')\n```\n:::\n\n\n\n\n\n## Feature creation\n\naggregate into time bin periods \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## define a dictionary of time epoch \n\ntime_bins <- list('Aquitanian' = c(23,22,21), \n                  'Burdigalian' = c(20,19,18,17,16), \n                  'Langhian' = c(15,14), \n                  'Serravallian' = c(13,12), \n                  'Tortonian' = c(8:11),\n                  'Messinian' = c(6,7), \n                  'Zanclean' = c(5:4), \n                  'Piacenzian' = c(2,3))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## extract the fossil matches from temperature for each region \n\nTemp_binned <- time_bins %>%  map(function(bin){\n  \n  paste0('X',bin) %>% map(~{\n    pluck(raster_temp, .x) %>% \n      raster::crop(.,reg_gridded)\n  }) %>% stack()\n  \n})\n\nTemp_binned_mean <- Temp_binned |> map(~mean(.x, na.rm = T))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## Temporally aggregate temperature records for each grid \nsaveRDS(Temp_binned_mean, 'DATA/temperature_grid/Temp_binned_mean.rds')\nsaveRDS(Temp_binned, 'DATA/temperature_grid/Temp_binned.rds')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nTemp_binned <- readRDS('DATA/temperature_grid/Temp_binned.rds')\nTemp_binned_mean <- readRDS('DATA/temperature_grid/Temp_binned_mean.rds')\n```\n:::\n\n\n\n\nLet's now observe the change in atmospheric temperature across geological periods\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Function to convert raster to data frame and assign the period name\nraster_to_df <- function(raster, period) {\n  raster_df <- as.data.frame(raster, xy = TRUE)\n  raster_df$period <- period\n  return(raster_df)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Combine all rasters into a single data frame with period information\nraster_df_list <- lapply(names(Temp_binned_mean), function(period) raster_to_df(Temp_binned[[period]], period))\ncombined_df <- bind_rows(raster_df_list)\n\n# Reshape the data for ggplot2\ncombined_df <- combined_df %>%\n  reshape2::melt(id.vars = c(\"x\", \"y\", \"period\"))\n\n\n# Plot using ggplot2 with facet_wrap, ordered by geological period\nggplot(combined_df, aes(x = x, y = y, fill = value)) +\n  geom_raster() +\n  scale_fill_viridis_c(option = 'A') + # You can choose different color scales if you prefer\n  facet_wrap(~ period, ncol = 3) + # Adjust ncol for the number of columns in facets\n  theme_minimal() +\n  theme(\n    strip.text = element_text(size = 12, face = \"bold\"),\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank()\n  ) +\n  labs(title = \"Raster Plots by Geological Period\", fill = \"Atmospheric  \\n temperature\")\n```\n\n::: {.cell-output-display}\n![](01_env_data_inport_files/figure-jats/unnamed-chunk-13-1.png)\n:::\n:::\n",
    "supporting": [
      "01_env_data_inport_files\\figure-jats"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}